<?xml version="1.0" encoding="UTF-8"?>
<project 
    xmlns="http://maven.apache.org/POM/4.0.0" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <modelVersion>4.0.0</modelVersion>
    
    <name>dyna</name>
    <description>Dynamic Java web project</description>
    <inceptionYear>2021</inceptionYear>
    <url>https://github.com/ZelmoTheDragon/dyna</url>
    
    <licenses>
        <license>
            <name>CeCILL 2.1</name>
            <url>http://cecill.info/licences/Licence_CeCILL_V2.1-en.txt</url>
            <comments>Licence française de logiciel libre</comments>
        </license>
    </licenses>
    
    <organization>
        <name>GitHub</name>
        <url>https://github.com</url>
    </organization>
    
    <issueManagement>
        <system>Github</system>
        <url>https://github.com/ZelmoTheDragon/dyna/issues</url>
    </issueManagement>
    
    <developers>
        <developer>
            <id>ZelmoTheDragon</id>
            <name>MOSELLE Maxime</name>
            <email>maximemoselle@gmail.com</email>
            <organization>GitHub</organization>
            <organizationUrl>https://github.com</organizationUrl>
            <timezone>Europe/Paris</timezone>
            <url>https://github.com/ZelmoTheDragon</url>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
    </developers>
    
    <groupId>com.github.zelmothedragon</groupId>
    <artifactId>dyna</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>
    
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <version.java>11</version.java>
        <version.jakarta>8.0.0</version.jakarta>
        <version.microprofile>3.3</version.microprofile>

        <version.eclipselink>2.7.7</version.eclipselink>
        <version.slf4j>1.7.30</version.slf4j>
        <version.log4j>2.13.3</version.log4j>
        
        <!-- 
            TEST 
        -->
        <!-- Serveur embarqué -->
        <version.payara>5.2020.7</version.payara>
        
        <!-- Version des bibliothèques -->
        <version.junit>4.13.1</version.junit>
        <version.jacoco>0.8.6</version.jacoco>
        
        <version.arquillian-bom>1.6.0.Final</version.arquillian-bom>
        <version.arquillian-junit-container>1.6.0.Final</version.arquillian-junit-container>
        <version.graphene-webdriver>2.3.2</version.graphene-webdriver>
        <version.arquillian-drone-bom>2.5.1</version.arquillian-drone-bom>
        <version.arquillian-warp-jsf>1.0.0</version.arquillian-warp-jsf>
        <version.arquillian-jacoco>1.1.0</version.arquillian-jacoco>
        <version.arquillian-jacoco-with-asm>1.1.0</version.arquillian-jacoco-with-asm>
        <version.arquillian-payara-micro-managed>2.3.3</version.arquillian-payara-micro-managed>
        <version.shrinkwrap.resolver>3.1.4</version.shrinkwrap.resolver>
               
        <jacoco.agent.path>${project.build.directory}/org.jacoco.agent-${version.jacoco}.jar</jacoco.agent.path>
        <jacoco.option>-javaagent:${jacoco.agent.path}=destfile=${project.build.directory}/jacoco/jacoco-it.exec</jacoco.option>
    </properties>
    
    
    <dependencies>
        
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-web-api</artifactId>
            <version>${version.jakarta}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile</groupId>
            <artifactId>microprofile</artifactId>
            <version>${version.microprofile}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.jpa.modelgen.processor</artifactId>
            <version>${version.eclipselink}</version>
            <scope>provided</scope>
        </dependency>
                
        <!-- Journalisation -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${version.slf4j}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${version.log4j}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${version.log4j}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${version.log4j}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jul</artifactId>
            <version>${version.log4j}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-web</artifactId>
            <version>${version.log4j}</version>
            <scope>compile</scope>
        </dependency>
        
        <!-- 
            TEST 
        -->
        <!-- JUnit -->
        <dependency>
            <!-- TODO: Migrer version JUnit 5 -->
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>
        <!-- Jacoco -->
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>org.jacoco.core</artifactId>
            <version>${version.jacoco}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>org.jacoco.agent</artifactId>
            <version>${version.jacoco}</version>
            <scope>test</scope>
        </dependency>
        
        <!-- Arquillian -->
        <dependency>
            <groupId>org.jboss.arquillian</groupId>
            <artifactId>arquillian-bom</artifactId>
            <version>${version.arquillian-bom}</version>
            <type>pom</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <version>${version.arquillian-junit-container}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.graphene</groupId>
            <artifactId>graphene-webdriver</artifactId>
            <version>${version.graphene-webdriver}</version>
            <type>pom</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-drone-bom</artifactId>
            <version>${version.arquillian-drone-bom}</version>
            <type>pom</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-warp-jsf</artifactId>
            <version>${version.arquillian-warp-jsf}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-jacoco</artifactId>
            <version>${version.arquillian-jacoco}</version>
            <type>pom</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-jacoco-with-asm</artifactId>
            <version>${version.arquillian-jacoco-with-asm}</version>
            <scope>test</scope>
        </dependency>   
        <!-- Shrinkwrap resolver -->
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-bom</artifactId>
            <version>${version.shrinkwrap.resolver}</version>
            <type>pom</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <version>${version.shrinkwrap.resolver}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven-archive</artifactId>
            <version>${version.shrinkwrap.resolver}</version>
            <scope>test</scope>
        </dependency>    
        <!-- Payara -->
        <dependency>
            <groupId>fish.payara.arquillian</groupId>
            <artifactId>arquillian-payara-micro-managed</artifactId>
            <version>${version.arquillian-payara-micro-managed}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>fish.payara.extras</groupId>
            <artifactId>payara-micro</artifactId>
            <version>${version.payara}</version>
            <scope>test</scope>
        </dependency>
                
    </dependencies>
    
    <build>
        
        <sourceDirectory>src/main/java</sourceDirectory>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        
        <testSourceDirectory>src/test/java</testSourceDirectory>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        
        <plugins>
                        
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${version.java}</source>
                    <target>${version.java}</target>
                    <showDeprecation>true</showDeprecation>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.eclipse.persistence</groupId>
                            <artifactId>org.eclipse.persistence.jpa.modelgen.processor</artifactId>
                            <version>${version.eclipselink}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.2</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.3</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.9.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.1.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
            </plugin>
            
            <!-- 
                Serveur embarqué Payara Micro 
                Commande pour démarrer le serveur:
                mvn payara-micro:start
            -->
            <plugin>
                <groupId>fish.payara.maven.plugins</groupId>
                <artifactId>payara-micro-maven-plugin</artifactId>
                <version>1.3.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>bundle</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <payaraVersion>${version.payara}</payaraVersion>
                    <uberJarClassifier>micro</uberJarClassifier>
                    <deployWar>true</deployWar>
                    <autoDeployEmptyContextRoot>false</autoDeployEmptyContextRoot>
                    <autoDeployContextRoot>/dyna</autoDeployContextRoot>
                </configuration>
            </plugin>
            
            <!-- 
                TEST 
            -->
            
            <plugin>
                <!-- Couverture du code par les tests. -->
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.6</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco/jacoco.exec</destFile>
                            <append>true</append>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco/jacoco.exec</dataFile>
                            <outputDirectory>${project.build.directory}/jacoco</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
        </plugins>
    </build>
</project>